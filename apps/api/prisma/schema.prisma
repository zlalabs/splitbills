generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  username       String          @unique
  password       String
  name           String
  email          String          @unique
  mobile         String?
  createdAt      DateTime        @default(now())
  refreshToken   String?
  bills          Bill[]
  forgetPassword ForgetPassword?
  peoples        People[]

  @@map("users")
}

model ForgetPassword {
  id        String   @id @default(uuid())
  userId    String   @unique
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("forget_passwords")
}

model People {
  id     String   @id @default(uuid())
  name   String
  userId String?
  member Member[]
  user   User?    @relation(fields: [userId], references: [id])

  @@map("peoples")
}

model Bill {
  id        String   @id @default(uuid())
  userId    String?
  name      String?
  qrCode    String?
  link      String
  imageId   String?
  completed Boolean
  createdAt DateTime
  image     Image?   @relation(fields: [imageId], references: [id], onDelete: Cascade)
  user      User?    @relation(fields: [userId], references: [id])
  lists     List[]
  members   Member[]

  @@map("bills")
}

model Image {
  id       String @id @default(uuid())
  fileName String
  path     String
  fullPath String
  bill     Bill[]

  @@map("images")
}

model Member {
  id       String         @id @default(uuid())
  name     String
  billId   String?
  peopleId String?
  paid     Boolean        @default(false)
  bill     Bill?          @relation(fields: [billId], references: [id])
  people   People?        @relation(fields: [peopleId], references: [id])
  lists    PeopleOnList[]

  @@map("members")
}

model List {
  id      String         @id @default(uuid())
  name    String
  price   Float
  billId  String?
  bill    Bill?          @relation(fields: [billId], references: [id])
  peoples PeopleOnList[]

  @@map("lists")
}

model PeopleOnList {
  memberId String
  listId   String
  list     List   @relation(fields: [listId], references: [id])
  member   Member @relation(fields: [memberId], references: [id])

  @@id([memberId, listId])
  @@map("people_on_lists")
}
